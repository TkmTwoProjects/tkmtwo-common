
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

configurations {
  doc { 
    transitive false
  }
}
dependencies {
  compile "com.google.guava:guava:${depVersionGuava}"
  doc "com.google.code.findbugs:jsr305:3.0.0";
  
  testCompile "junit:junit:${depVersionJunit}"
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "file://$buildDir/repo")
      //repository(url: "file://$rootDir/../tkmtwo-mvn-repo/release")
    }
  }
}


configurations {
  all*.exclude module: 'commons-logging'
  all*.exclude module: 'log4j'
}

jar {
  baseName = rootProject.name
  //appendix = project.name
}


javadoc {
  options.author = true
  //options.header = rootProject.name + '-' + project.name
  options.header = rootProject.name
  options.links(project.ext.javadocLinks)
  //title = rootProject.name + '-' + project.name
  title = rootProject.name
  classpath += configurations.doc
}


checkstyle {
  configFile = new File(rootDir, "config/checkstyle.xml")
  sourceSets = [sourceSets.main]
}




findbugs {
  //toolVersion = "2.0.1"
  //sourceSets = [sourceSets.test]
  ignoreFailures = true
  reportsDir = file("$project.buildDir/reports/findbugs")
  effort = "max"
  reportLevel = "low"
  //reportLevel = "high"
  //visitors = ["FindSqlInjection", "SwitchFallthrough"]
  //omitVisitors = ["FindNonShortCircuit"]
  //includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
  //excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}


findbugsMain {
  reports {
    xml { enabled = false }
    html {
      enabled = true
      destination "$project.buildDir/reports/findbugs/findbugsMain.html"
    }
  }
}

findbugsTest {
  reports {
    xml { enabled = false }
    html {
      enabled = true
      destination "$project.buildDir/reports/findbugs/findbugsTest.html"
    }
  }
}
